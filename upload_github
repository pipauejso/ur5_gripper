没问题！这里给你一份从 **0 到把本地文件夹提交到 GitHub** 的超简洁“保姆级”流程（以 **SSH** 方式为主，附 HTTPS+Token 备选）。

------

# 一、一次性准备（只需做一次）

```
bashCopyEdit# 1) 安装 Git
sudo apt update && sudo apt install -y git

# 2) 配置用户名与邮箱
git config --global user.name "你的GitHub用户名"
git config --global user.email "你的GitHub邮箱"

# 3) 生成并配置 SSH（推荐）
ssh-keygen -t ed25519 -C "你的GitHub邮箱"
cat ~/.ssh/id_ed25519.pub     # 复制到 GitHub -> Settings -> SSH and GPG keys -> New SSH key
ssh -T git@github.com         # 看到 Hi <你>! 即 OK
```

> 备选（不推荐）：HTTPS 需用 **Personal Access Token** 当“密码”。

------

# 二、在 GitHub 新建空仓库

GitHub 网页 → 右上角 **“+” → New repository** → 取名（例如 `myrepo`）→ **Create repository**
 （如果你打算直接推送本地历史，建议**不要**勾选 README/.gitignore；如果勾了，后面会多一步合并）

------

# 三、本地初始化并首次提交

假设你的项目在：

```
bash


CopyEdit
~/Documents/myproject
bashCopyEditcd ~/Documents/myproject

# 1) 初始化仓库
git init

# 2) 添加所有文件并提交
git add .
git commit -m "Initial commit"
```

------

# 四、绑定远程并推送（SSH）

```
bashCopyEdit# 1) 绑定远程（替换为你的仓库）
git remote add origin git@github.com:<你的用户名>/<你的仓库名>.git

# 2) 用 main 作为默认分支（与 GitHub 一致）
git branch -M main

# 3) 推送
git push -u origin main
```

### 若提示 “fetch first / non-fast-forward”（远程有 README 等）

```
bashCopyEditgit pull --rebase --allow-unrelated-histories origin main
git push -u origin main
```

------

# 五、日常更新三步走

```
bashCopyEditgit add .
git commit -m "这次的改动说明"
git push
```

------

# 六、常见坑与速解

1. **提示输入 Username/Password**
    → 远程用的是 HTTPS。改回 SSH：

```
bash


CopyEdit
git remote set-url origin git@github.com:<你>/<仓库>.git
```

1. **`src refspec main does not match any`**
    → 本地没有 `main` 或没有提交：先 `git add . && git commit -m "msg"`；
    或把当前分支改名：

```
bash


CopyEdit
git branch -M main
```

1. **`Repository not found`**
    → 仓库名/路径写错，或仓库没创建，或没权限。核对 `git remote -v` 与 GitHub 仓库是否存在。
2. **上传后目录变蓝、GitHub 点不开**
    → 你把一个**嵌套仓库**（里面有 `.git`）塞进来了。

- 想并入当前仓库：

  ```
  bashCopyEditrm -rf 路径/.git
  git add 路径
  git commit -m "Flatten nested repo"
  git push
  ```

- 想保留独立：用子模块：

  ```
  bashCopyEditgit rm -r --cached 路径
  git submodule add git@github.com:<owner>/<repo>.git 路径
  git commit -m "Add submodule"
  git push
  ```

1. **更换远程地址**

```
bash


CopyEdit
git remote set-url origin git@github.com:<你>/<新仓库>.git
```

------

# 七、可选优化（一次性）

```
bashCopyEdit# 以后新建仓库默认就是 main
git config --global init.defaultBranch main

# 登录时自动加载 SSH 密钥（静默）
echo 'if ! pgrep -u "$USER" ssh-agent >/dev/null; then eval "$(ssh-agent -s)" >/dev/null 2>&1; fi' >> ~/.bashrc
echo 'ssh-add ~/.ssh/id_ed25519 >/dev/null 2>&1' >> ~/.bashrc
source ~/.bashrc
```

------

这样按顺序做就能稳定把任意本地文件夹推上 GitHub。
 如果你提供“项目路径 + 目标仓库 SSH 地址”，我可以给你一条**可直接复制的整套命令**（把所有步骤串起来，一次执行完